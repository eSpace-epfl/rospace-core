<!--
Copyright (c) 2018, Christian Lanegger (lanegger.christian@gmail.com)

@license zlib license

This file is licensed under the terms of the zlib license.
See the LICENSE.md file in the root of this repository
for complete details.

//////////////////////////////////////////////////////////////////////////////////////
Magnetorquer Node Integration Test
Integration test for the Magnetorquer node testing that node is correctly integrated into the
simulation framework. The nodes with which the Magnetorquer is communicating are started and
it is checked if all messages are correctly received by these nodes.

Following nodes are added to Testcraft for integration testing:
    - actuators/magnetorquer_node
    - flight_software_node
 -->
<launch>

    <!-- ROS Integration Test -->
    <test test-name="test_MagnetorquerNode" pkg="rospace_magnetorquer" type="rostest_MagnetorquerNode.py" time-limit="40.0">
        <param name="spacecraft" value="testcraft" />
    </test>
    <!-- ////////////////////////////////////////////////////////////////// -->

    <!-- Launch ROSpace Simulator -->
    <include file="$(find rospace_simulator)/launch/simulator.launch">
        <arg name="start_running" value="True"/>
        <arg name="rostest_running" value="True"/>
        <arg name="mission" value="test_mission"/>
        <arg name="scenario" value="test_mission"/>
    </include>
    <!-- ////////////////////////////////////////////////////////////////// -->

    <!-- Add to-be-tested sensors and actuators to Testcraft -->
    <group ns="testcraft">
        <group ns="actuators">
            <!-- Launch Magnetorquer -->
            <include file="$(find rospace_magnetorquer)/launch/magnetorquer.launch">
                <arg name="spacecraft" value="testcraft" />
            </include>
        </group>

        <!-- Launch Flight Software -->
        <include file="$(find rospace_flightsoftware)/launch/flight_software.launch">
            <arg name="spacecraft" value="testcraft" />
        </include>
    </group>
    <!-- ////////////////////////////////////////////////////////////////// -->

</launch>
